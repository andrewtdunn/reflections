When would you want to use a remote repository rather than keeping all your work
local?

    When you're using more than one computer or working with another developer

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Using the current direct commit technique, some changes added to master
    are not fully tested and might break existing code. However, if they are fully tested, I'm not
    sure why there is no feature in git to keep the master branch current.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are new copies of an existing repo within github or locally. Clones
    are repository copies from origin to local files. Brances are copies of code within
    a single instance of a repository. Forks are used to modify an existing project
    but not alter the project without the original project's owner's permission. Clones
    are used to copy a project from a remote source to a local machine. Branches are
    used to add new features to a projcect.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that you can work on the file without an internet connection and stay update
    with the other changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Definitely with. Github is useful because it maintains a common worked shared
    master copy. If the team is constantly passing around copies of projects, there
    is too much possibility of changes being accidentally introduced.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
